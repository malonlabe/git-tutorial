
Gitolite server:

Server name is: "czc3025gt6.clients.em.health.ge.com"
Name of repository is: esp

To clone the repo: 
> git clone git@czc3025gt6.clients.em.health.ge.com:esp
> git clone git@czc3025gt6.clients.em.health.ge.com:esp <new_dir_name>
> git clone ssh://git@czc3025gt6.clients.em.health.ge.com/csp-tools.git

___________________________________________
Add changes step by step 

--for example local branch has name "task_screen_setup", and Rally number: "DE999"

1. add files:
> git add .

2. commit chnges:
> git commit - "add your comment here"

3. merge commits to one (if any):
> git rebase -i origin/master

4. get changes from repository:
> git fetch

5. rebase your changes to top of the repository:
> git rebase origin/master

6. push changes to gerrit:
> git push gerrit task_screen_setup:refs/publish/master/DE999

7. wait for review/comments.

8. After all review was OK, push to master for "gerrit" AND "gitolite":
> git push gerrit task_screen_setup:master
> git push origin task_screen_setup:master

___________________________________________
Rebase:
> git rebase -i origin/master
    - this will run an "interactive" rebase, where you can choose what to do with commits and messages.

___________________________________________
Gerrit and Continuous Integration.

info in wiki:
"http://czc3025gt7.clients.em.health.ge.com:8080/wiki/index.php/Integrating_changes"

How to publish to gerrit for review(!):
! REM: 
    - before ":refs" there is hash or branch_name of the commit
    - after "master" there is topic, some number from Rally system: "DE167"

1. Use hash:
> git push gerrit 909eb2ea4daac240a35c8d67087baeac9ad80c04:refs/publish/master/DE167

2. use branch name:
> git push gerrit task_crash_open_SpO2_alarms_menu_aug_2014:refs/publish/master/DE167

___________________________________________
Integration, shortly:

> git add .
> git commit -m "comment"

This command will run an "interactive" rebase, where you can choose what to do with 
commits and messages. So, choose 'f' in for last commit in new opened window.
> git rebase -i origin/master

This will load all changes from remote:
> git fetch 
> git rebase origin/master

After all review was OK, push to master for "gerrit" AND "gitolite":
> git push gerrit task_crash_open_SpO2_alarms_menu_aug_2014:master
> git push origin task_crash_open_SpO2_alarms_menu_aug_2014:master

___________________________________________
If new git clone was download, Gerrit will not work. 
To fix it:

1. check if gerrit has been added for this clone:
> git remote -v 
--- output should be like "gerrit:esp (fetch)". If not:

2. copy file "commit-msg" from any previous GIT clone or 
   from  "http://czc3025gt7.clients.em.health.ge.com/debrepo/hooks/commit-msg" 
   and copy it to the ".git/hooks" directory of your esp clone.

3. add gerrit as remote by running:
> git remote add gerrit gerrit:esp

4. Add Change-Id. In "Git Bash" (win32 cmd will not work!) run follow:
> GIT_EDITOR=true git rebase --force-rebase --preserve-merges -i -x 'git commit --amend --no-edit' origin/master



___________________________________________
how to get updates (avoid "git pull"):
--for example local branch has name "task_screen_setup_17Feb2014_squashed"

1. get changes:
> git fetch

2. if any files was locally changed:
> git rebase origin/task_screen_setup_17Feb2014_squashed

3. if no files locally changed:
> git reset --hard origin/task_screen_setup_17Feb2014_squashed

__________________________________________
To create new working branch "task_new_branch_name":

> git branch task_new_branch_name

To change pointer to the branch:

> git checkout task_new_branch_name


___________________________________________
proxy settings:
1. git config --global http.proxy 3.187.157.236:9400
2. git config http.proxy 3.187.157.236:9400


___________________________________________
grep ERROR example.txt | wc -l
REM: this count words ERROR in file example.txt.

___________________________________________
- how to use bisect:
git bisect start HEAD origin/initial
