
Gitolite server:

Server name is: "czc3025gt6.clients.em.health.ge.com"
Name of repository is: esp

To clone the repo: 
> git clone git@czc3025gt6.clients.em.health.ge.com:esp
> git clone git@czc3025gt6.clients.em.health.ge.com:esp <new_dir_name>
> git clone ssh://git@czc3025gt6.clients.em.health.ge.com/csp-tools.git

___________________________________________
how to get updates (avoid "git pull"):
--for example local branch has name "task_screen_setup_17Feb2014_squashed"
1. get changes:
> git fetch

2. if any files was locally changed:
> git rebase origin/task_screen_setup_17Feb2014_squashed

3. if no files locally changed:
> git reset --hard origin/task_screen_setup_17Feb2014_squashed

___________________________________________
Rebase:
> git rebase -i origin/master
    - this will run an "interactive" rebase, where you can choose what to do with commits and messages.

___________________________________________
Gerrit and Continuous Integration.

info in wiki:
"http://czc3025gt7.clients.em.health.ge.com:8080/wiki/index.php/Integrating_changes"

How to push to gerrit.
! REM: 
    - before ":refs" there is hash or branch_name of the commit
    - after "master" there is topic, some number from Rally system: "DE167"

1. Use hash:
> git push gerrit 909eb2ea4daac240a35c8d67087baeac9ad80c04:refs/publish/master/DE167

2. use branch name:
> git push gerrit task_crash_open_SpO2_alarms_menu_aug_2014:refs/publish/master/DE167

___________________________________________
Integration, step by step:

> git add .
> git commit -m "comment"

This command will run an "interactive" rebase, where you can choose what to do with 
commits and messages. So, choose 'f' in for last commit in new opened window.
> git rebase -i origin/master

This will load all changes from remote:
> git fetch 
> git rebase origin/master

After all review was OK, push to master for "gerrit" AND "gitolite":
> git push gerrit task_crash_open_SpO2_alarms_menu_aug_2014:master
> git push origin task_crash_open_SpO2_alarms_menu_aug_2014:master

___________________________________________
To create new working branch "task_new_branch_name":

> git branch task_new_branch_name

To change pointer to the branch:

> git checkout task_new_branch_name


___________________________________________
proxy settings:
1. git config --global http.proxy 3.187.157.236:9400
2. git config http.proxy 3.187.157.236:9400


___________________________________________
grep ERROR example.txt | wc -l
REM: this count words ERROR in file example.txt.

___________________________________________
- how to use bisect:
git bisect start HEAD origin/initial
