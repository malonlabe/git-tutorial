Unittest notes.


REM: it is better to use folder with "coverage" in its name.
REM: Pertl script "build" will turn coverage "cov01 --on" automatically

unittest using CMAKE:

1. To create unittests using ninja for unit i.e. "DAlarm":
- make sure that coverage is on:
    > cov01 --on
- goto folder where all builds are, i.e. "build"
- goto coverage folder, i.e. "local-coverage-debug"
- in this folder run follow:
    > ninja subsystem.unittest
where "subsystem" is the name of the subsystem, for example, "DAlarm.unittest":
    > ninja DAlarm.unittest

- to run unittest:
    > ninja subsystem.unittest.run
    > ninja DAlarm.unittest.run

________________________________________
2. To create unittests using Perl script "build" for unit i.e. "DAlarm":
- goto folder where all builds are, i.e. "build"
- goto coverage folder, i.e. "local-coverage-debug"
- in this folder run follow:
    > build DAlarm.unittest
- to run unittest:
    > ctest -R DAlarm
- to run unittest with error output:
    > ctest -R DAlarm --output-on-failure


________________________________________
Unittest implementation notes:

- create "Test_NAME" header and sourse files: hpp and cpp. Where "NAME" is target file for unittest.
- add "Test_NAME.hpp" to makefile
- 


________________________________________
Unittest - bullseye coverage:

1. run "cov01 --on" to turn it on;
2. run "cov01 --off" to turn it off;
3. run "cov01 --statusf" to see status;
4. start CoverageBrowser.exe (alias to "BullseyeCoverage")


________________________________________
Useful links:
Doxygen:
http://hce-czc3357z9m.clients.em.health.ge.com:8080/doxygen/class_msf_1_1_model_toolkit_1_1_bounded_range_model.html


________________________________________
REM: This is obsolete start from SEP-2014.

unittest using OMAKE:

1. hardcore way:
> omake monitor=winppd -f ..\..\..\..\..\..\..\Msf\Code\Msf\Default\DScreen\makefile.mak unittest 
> omake monitor=winppd -f ..\..\..\..\..\..\..\Msf\Code\Msf\Default\DScreen\makefile.mak


2. easy way:
From a folder to be tested (for example 'D:\dev\esp5\Targets\WindowsDebug\Msf\Code\Msf\Alarms\AlarmsDefs')
run follow:
> build unittest

REM: here will be called a Perl script, running unittest for current subsystem.

___________________________________________

To generate a coverage file for bullseye:
From a folder to be tested (for example 'D:\dev\esp5\Targets\WindowsDebug\Msf\Code\Msf\DScreen')

> build unittest -cov 

(observe follow line in the output: "Command: cov01 -q --on")
it will create a file which can be open with bullseye.

___________________________________________
TODO:

How to create unittest file template?
